image: ubuntu:latest

stages:
  - build
  - test

# Build documentation and unit tests at once so that we donâ€™t need to install
# all the Debian packages in another job again.
build:
  stage: build
  before_script:
    - export DEBIAN_FRONTEND=noninteractive
    - apt-get update -qq
    - apt-get install -y -qq
      cmake
      default-jre
      doxygen
      g++
      graphviz
      texlive-base
      valgrind
  script:
    - mkdir --parents build
    - cp examples/demo_simulation.toml build/
    - cd build
    - cmake
      -DSTOP_DOXYGEN_ON_WARNING=ON
      -DBUILD_TESTING=ON
      -DBUILD_DEMO_SIMULATOR=ON
      -DBUILD_DOC=ON ..
    - make --jobs=6 megafauna_docs megafauna_unit_tests megafauna_demo_simulator
  artifacts:
    paths:
      - build/demo_results.Rmd
      - build/demo_simulation.toml
      - build/docs/html/
      - build/megafauna.toml
      - build/megafauna_demo_simulator
      - build/megafauna_unit_tests
    expire_in: 20 minutes

unit_tests:
  stage: test
  script:
    - cd build
    - ./megafauna_unit_tests

memcheck:
  stage: test
  script:
    - cd build
    - valgrind
      --leak-check=full
      --show-leak-kinds=all
      --track-origins=yes
      --verbose
      megafauna_demo_simulator
      "megafauna.toml"
      "demo_simulation.toml"
      | tee memcheck.log
    # If the error summary has not zero errors, the grep command will fail.
    - grep --silent "ERROR SUMMARY: 0 errors" memcheck.log

demo_simulation:
  stage: test
  script:
    - cd build
    - ./megafauna_demo_simulator
      "megafauna.toml"
      "demo_simulation.toml"
    - Rscript -e
      "library(knitr);\
       library(markdown);\
       knit('demo_results.Rmd', 'demo_results.md');\
       markdownToHTML('demo_results.md', 'demo_results.html')"
    - test -f "demo_results.html" || echo >&2 "No HTML produced!"
